--- 
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata: 
  name: standard
provisioner: ebs.csi.aws.com
#reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
parameters:
  tagSpecification_1: "Environment=DEV"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-storage-claim-new
  namespace: backstage
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2G
---
# kubernetes/postgres.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresdb
  namespace: backstage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      # initContainers:
      #   - name: init-postgres
      #     image: busybox
      #     command: ["sh", "-c", "rm -rf /var/lib/postgres/data/*"]
      #     volumeMounts:
      #     - name: postgresdb
      #       mountPath: /var/lib/postgres/data
      containers:
        - name: postgres
          image: postgres:13.2-alpine
          imagePullPolicy: 'IfNotPresent'
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secrets
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdb
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: postgres-storage-claim-new
---
# kubernetes/postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: backstage
spec:
  selector:
    app: postgres
  ports:
    - port: 5432